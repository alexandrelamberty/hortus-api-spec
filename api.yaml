openapi: 3.0.2
info:
  title: Hortus
  description: Culture Planner
  contact:
    name: Alexandre Lamberty
    email: mail@alexandrelamberty.com
    url: "https://alexandrelamberty.com"
  license:
    name: MIT License
    url: "https://opensource.org/licenses/MIT"
  version: 0.0.1
servers:
  - url: "https://dev.api.hortus.lan"
    description: Development server
  - url: "https://staging.api.hortus.lan"
    description: Staging server
  - url: "https://api.hortus.lan"
    description: Production server
paths:
  /plants:
    get:
      summary: ListPlants
      tags:
        - plant
      responses:
        "200":
          $ref: "#/components/responses/ListPlantsResponse"
      operationId: get-plants
      description: List all plants
      parameters:
        - $ref: "#/components/parameters/listSkip"
        - $ref: "#/components/parameters/listLimit"
        - $ref: "#/components/parameters/orderBy"
    post:
      summary: CreatePlant
      tags:
        - plant
      operationId: post-plants
      responses:
        "200":
          $ref: "#/components/responses/GetPlantResponse"
      description: Create a plant
      requestBody:
        $ref: "#/components/requestBodies/CreatePlantsRequest"
  "/plants/{plantId}":
    parameters:
      - $ref: "#/components/parameters/plantId"
    get:
      summary: GetPlant
      tags:
        - plant
      responses:
        "200":
          $ref: "#/components/responses/GetPlantResponse"
      operationId: get-plants-plantId
      description: Get a plant
    patch:
      summary: UpdatePlant
      tags:
        - plant
      operationId: patch-plants-plantId
      responses:
        "200":
          $ref: "#/components/responses/GetPlantResponse"
      description: Update a plant
      requestBody:
        $ref: "#/components/requestBodies/UpdatePlantRequest"
    delete:
      summary: DeletePlant
      tags:
        - plant
      operationId: delete-plants-plantId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
      description: Delete a plant
  /seeds:
    get:
      summary: ListSeeds
      tags:
        - seed
      responses:
        "200":
          $ref: "#/components/responses/ListSeedsResponse"
      operationId: get-seeds
      description: List all seeds
      x-internal: false
      parameters:
        - $ref: "#/components/parameters/listSkip"
        - $ref: "#/components/parameters/listLimit"
    post:
      summary: CreateSeed
      tags:
        - seed
      operationId: post-seeds
      responses:
        "200":
          description: OK
      description: Create a new seed
      requestBody:
        $ref: "#/components/requestBodies/CreateSeedRequest"
  "/seeds/{seedId}":
    parameters:
      - $ref: "#/components/parameters/seedId"
    get:
      summary: GetSeed
      tags:
        - seed
      responses:
        "200":
          $ref: "#/components/responses/GetSeedResponse"
      operationId: get-seeds-seedId
      description: Get a seed
    patch:
      summary: UpdateSeed
      tags:
        - seed
      operationId: patch-seeds-seedId
      responses:
        "200":
          $ref: "#/components/responses/GetSeedResponse"
      description: Update a seed
      requestBody:
        $ref: "#/components/requestBodies/UpdateSeedRequest"
    delete:
      summary: DeleteSeed
      tags:
        - seed
      operationId: delete-seeds-seedId
      responses:
        "200":
          description: OK
      description: Delete a seed
  /cultures:
    get:
      summary: ListCultures
      tags:
        - culture
      responses:
        "200":
          $ref: "#/components/responses/ListCulturesResponse"
      operationId: get-cultures
      description: List all cultures
      parameters:
        - $ref: "#/components/parameters/listSkip"
        - $ref: "#/components/parameters/listLimit"
    post:
      summary: CreateCulture
      tags:
        - culture
      operationId: post-cultures
      responses:
        "200":
          description: OK
      description: Create a new culture
      requestBody:
        $ref: "#/components/requestBodies/CreateCultureRequest"
    parameters: []
  "/cultures/{cultureId}":
    parameters:
      - $ref: "#/components/parameters/cultureId"
    get:
      summary: GetCulture
      tags:
        - culture
      responses:
        "200":
          $ref: "#/components/responses/GetSeedResponse"
      operationId: get-cultures-cultureId
      description: Get a culture
    delete:
      summary: DeleteCulture
      tags:
        - culture
      operationId: delete-cultures-cultureId
      responses:
        "200":
          description: OK
      description: Delete a culture
    patch:
      summary: UpdateCulture
      tags:
        - culture
      operationId: patch-cultures-cultureId
      responses:
        "200":
          $ref: "#/components/responses/GetCultureResponse"
      description: Update a culture
      requestBody:
        $ref: "#/components/requestBodies/UpdateCultureRequest"
  /users:
    get:
      summary: ListUsers
      tags:
        - user
      responses:
        "200":
          $ref: "#/components/responses/ListUsersResponse"
      operationId: get-users
      description: List all users
      parameters:
        - $ref: "#/components/parameters/listSkip"
        - $ref: "#/components/parameters/listLimit"
  "/cultures/{cultureId}/{phase}/{action}":
    parameters:
      - $ref: "#/components/parameters/cultureId"
      - $ref: "#/components/parameters/phaseName"
      - $ref: "#/components/parameters/phaseAction"
    get:
      summary: Control Phase
      operationId: get-cultures-cultureId-phase-action
      responses:
        "200":
          description: OK
      description: Allow to control a culture phase
  "/users/{userId}":
    parameters:
      - $ref: "#/components/parameters/userId"
    get:
      summary: GetUser
      tags:
        - user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The user unique identifier
                    format: uuid
                  email:
                    type: string
                    description: The user email
                    format: email
        "404":
          description: Not Found
      operationId: get-users-userId
      description: Get a user
    patch:
      summary: UpdateUser
      tags:
        - user
      operationId: patch-users-userId
      responses:
        "200":
          $ref: "#/components/responses/GetUserResponse"
      description: Update a user
    delete:
      summary: DeleteUser
      tags:
        - user
      operationId: delete-users-userId
      responses:
        "200":
          description: OK
      description: Delete a user
  /auth/register:
    post:
      summary: RegisterUser
      tags:
        - auth
      responses:
        "200":
          $ref: "#/components/responses/RegisterUserResponse"
      operationId: get-signin
      description: Register an user and send a email with a link to proceed to confirmation of the registration process
      requestBody:
        $ref: "#/components/requestBodies/RegisterUserRequest"
    parameters: []
  /auth/login:
    post:
      summary: LoginUser
      tags:
        - auth
      responses:
        "200":
          $ref: "#/components/responses/LoginUserResponse"
      operationId: get-login
      description: Log in a user
      requestBody:
        $ref: "#/components/requestBodies/LoginUserRequest"
    parameters: []
  /auth/reset:
    get:
      summary: ResetUserPassword
      tags:
        - auth
      responses:
        "200":
          description: OK
      operationId: get-auth-reset
      description: Reset a user password
  /notifications:
    get:
      summary: ListNotifications
      tags:
        - notification
      responses:
        "200":
          $ref: "#/components/responses/ListNotificationResponse"
      operationId: get-notifications
      description: List all notifications
      parameters:
        - $ref: "#/components/parameters/listSkip"
        - $ref: "#/components/parameters/listLimit"
    post:
      summary: CreateNotification
      tags:
        - notification
      operationId: post-notifications
      description: Create a notification
      responses:
        "200":
          description: OK
  "/notifications/{notificationId}":
    parameters:
      - $ref: "#/components/parameters/notificationId"
    patch:
      summary: UpdateNotification
      tags:
        - notification
      operationId: patch-notifications-notificationId
      responses:
        "200":
          description: OK
      description: Update a notification
    delete:
      tags:
        - notification
      summary: DeleteNotification
      operationId: delete-notifications-notificationId
      responses:
        "200":
          description: OK
      description: Delete a notification
    get:
      summary: GetNotification
      tags:
        - sensor
      operationId: get-notifications-notificationId
      responses:
        "200":
          description: OK
      description: Get a notification
  /sensors:
    get:
      summary: ListSensors
      tags:
        - sensor
      responses:
        "200":
          $ref: "#/components/responses/ListSensorsResponse"
      operationId: get-sensors
      description: List all sensors
      parameters:
        - $ref: "#/components/parameters/listSkip"
        - $ref: "#/components/parameters/listLimit"
components:
  schemas:
    Plant:
      title: Plant
