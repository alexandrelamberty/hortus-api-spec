openapi: 3.1.0
info:
  title: Hortus
  description: Culture Planner
  contact:
    name: Alexandre Lamberty
    email: mail@alexandrelamberty.com
    url: "https://alexandrelamberty.com"
  license:
    name: MIT License
    url: "https://opensource.org/licenses/MIT"
  version: 0.0.1
servers:
  - url: "https://dev.api.hortus.lan"
    description: Development server
  - url: "https://staging.api.hortus.lan"
    description: Staging server
  - url: "https://api.hortus.lan"
    description: Production server
tags:
  - name: Cultures
    description: Cultures service
  - name: Plants
    description: Plants service
  - name: Seeds
    description: Seeds service
paths:
  /plants:
    get:
      summary: List All Plants
      tags:
        - Plants
      responses:
        "200":
          $ref: "#/components/responses/ListPlantsResponse"
      operationId: get-plants
      description: List all plants.
      parameters:
        - $ref: "#/components/parameters/listSkip"
        - $ref: "#/components/parameters/listLimit"
        - $ref: "#/components/parameters/orderBy"
    post:
      summary: Create a New Plant
      tags:
        - Plants
      operationId: post-plants
      description: Create a plant.
      requestBody:
        $ref: "#/components/requestBodies/CreatePlantsRequest"
  "/plants/{plantId}":
    parameters:
      - $ref: "#/components/parameters/plantId"
    get:
      summary: Retrieve a Plant
      tags:
        - Plants
      responses:
        "200":
          $ref: "#/components/responses/GetPlantResponse"
      operationId: get-plants-plantId
      description: Retrieve details about an existing plant by its ID.
    patch:
      summary: Update a Plant
      tags:
        - Plants
      operationId: patch-plants-plantId
      responses:
        "200":
          $ref: "#/components/responses/GetPlantResponse"
      description: Update a plant
      requestBody:
        $ref: "#/components/requestBodies/UpdatePlantRequest"
    delete:
      summary: Delete a Plant
      tags:
        - Plants
      operationId: delete-plants-plantId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
      description: "Delete an existing plant. Once deleted, all associated seeds will be deleted and cultures associated with those seeds will also be deleted."
  /seeds:
    get:
      summary: List All Seeds
      tags:
        - Seeds
      responses:
        "200":
          $ref: "#/components/responses/ListSeedsResponse"
      operationId: get-seeds
      description: List all seeds on the system.
      x-internal: false
      parameters:
        - $ref: "#/components/parameters/listSkip"
        - $ref: "#/components/parameters/listLimit"
    post:
      summary: Create a New Seed
      tags:
        - Seeds
      operationId: post-seeds
      responses:
        "200":
          description: OK
      description: Create a new seed.
      requestBody:
        $ref: "#/components/requestBodies/CreateSeedRequest"
  "/seeds/{seedId}":
    parameters:
      - $ref: "#/components/parameters/seedId"
    get:
      summary: Retrieve a Seed
      tags:
        - Seeds
      responses:
        "200":
          $ref: "#/components/responses/GetSeedResponse"
      operationId: get-seeds-seedId
      description: Get a seed
    patch:
      summary: Update a Seed
      tags:
        - Seeds
      operationId: patch-seeds-seedId
      responses:
        "200":
          $ref: "#/components/responses/GetSeedResponse"
      description: Update an existing seed
      requestBody:
        $ref: "#/components/requestBodies/UpdateSeedRequest"
    delete:
      summary: Delete a Seed
      tags:
        - Seeds
      operationId: delete-seeds-seedId
      responses:
        "200":
          description: OK
      description: "Delete an existing seed. Once deleted, all the associated cultures will be deleted."
  /cultures:
    get:
      summary: List All Cultures
      tags:
        - Cultures
      responses:
        "200":
          $ref: "#/components/responses/ListCulturesResponse"
      operationId: get-cultures
      description: List all cultures on the system.
      parameters:
        - $ref: "#/components/parameters/listSkip"
        - $ref: "#/components/parameters/listLimit"
    post:
      summary: Create a New Culture
      tags:
        - Cultures
      operationId: post-cultures
      responses:
        "200":
          description: OK
      description: Create a new culture.
      requestBody:
        $ref: "#/components/requestBodies/CreateCultureRequest"
    parameters: []
  "/cultures/{cultureId}":
    parameters:
      - $ref: "#/components/parameters/cultureId"
    get:
      summary: Retrieve a Culture
      tags:
        - Cultures
      responses:
        "200":
          $ref: "#/components/responses/GetSeedResponse"
      operationId: get-cultures-cultureId
      description: Retrieve details about an existing culture by its ID.
    delete:
      summary: Delete a Culture
      tags:
        - Cutures
      operationId: delete-cultures-cultureId
      responses:
        "200":
          description: OK
      description: Delete an existing culture.
    patch:
      summary: Update a Culture
      tags:
        - Cultures
      operationId: patch-cultures-cultureId
      responses:
        "200":
          $ref: "#/components/responses/GetCultureResponse"
      description: Update a culture.
      requestBody:
        $ref: "#/components/requestBodies/UpdateCultureRequest"
  "/cultures/{cultureId}/phase/":
    parameters:
      - name: cultureId
        in: path
        required: true
        schema:
          type: string
        description: The Culture unique identifier
    patch:
      summary: ""
      tags: Cultures
      operationId: patch-cultures-cultureId-phase
      responses:
        "200":
          description: OK
  "/cultures/{cultureId}/harvesting/harvests":
    parameters:
      - name: cultureId
        in: path
        required: true
        schema:
          type: string
        description: The Culture unique identifier
    patch:
      summary: ""
      tags: cultures
      operationId: patch-cultures-cultureId-harvesting-harvests
      responses:
        "200":
          description: OK
components:
  schemas:
    Plant:
      title: Plant
      x-stoplight:
        id: g45ci59xg38sz
      type: object
      description: Represent a botanical classification of a plant
      x-examples: {}
      properties:
        id:
          type: string
          format: uuid
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: The plant unique identifier
        name:
          type: string
          example: Carrot
          description: The plant common name
        family:
          type: string
          example: Apiaceae
          description: The plant family
        genus:
          type: string
          example: Daucus
          description: The plant genus
        species:
          type: string
          example: carota
          description: The plant species
        subspecies:
          type: string
          example: hispanicus
          description: The plant subspecies
        variety:
          type: string
          example: linearis
          description: The plant variety
        forma:
          type: string
          example: klimpelianum
          description: The plant forma
        cultivar:
          type: string
          example: Golden Wonder
          description: The plant cultivar
        hybrid:
          type: string
          example: Sorbaronia
          description: The plant hybrid
        binomial:
          type: string
          example: Daucus carota
          description: Binomial of the plant
        trinomial:
          type: string
          example: Brassica rapa var. rapa
          description: Trinomial name of the plant
        common_names:
          $ref: "#/components/schemas/Name"
          description: Common names of the plant
        color:
          type: string
          description: A color associated with the plant
        createdAt:
          type: string
          format: date-time
          description: The date the plant was created
          minimum: "2022-01-01T00:00:00Z"
          maximum: "2122-12-31T23:59:59Z"
        updatedAt:
          type: string
          format: date-time
          description: The date the plant was updated
          minimum: "2022-01-01T00:00:00Z"
          maximum: "2122-12-31T23:59:59Z"
      required:
        - id
        - name
        - family
        - genus
        - species
        - createdAt
        - updatedAt
    Seed:
      title: Seed
      x-stoplight:
        id: 3auaw22iq0xx6
      type: object
      description: A seed is associated with a unique plant and provides details about cultivation of this plant.
      properties:
        id:
          type: string
          description: A unique identifier
          format: uuid
        plant:
          $ref: "#/components/schemas/Plant"
          description: The seed's plant associated
        name:
          type: string
          description: The seed name
        description:
          type: string
          description: A short description
        type:
          type: string
          enum:
            - bulb
            - flower
            - fruit
            - herb
            - leaf
            - other
            - root
            - seed
            - stem
          description: Harvested part
        image:
          type: string
          pattern: Â¨.jpg
          description: Image file
        harvest:
          type: array
          minItems: 2
          maxItems: 2
          description: Estimated day between seeding and harvesting
          items:
            type: number
        season:
          type: string
          enum:
            - annual
            - biennal
            - perenial
          description: Seasonality
        frost:
          type: string
          example: tolerant
          enum:
            - tolerant
            - non_tolerent
          description: Freezing tolerance
        sun:
          type: string
          enum:
            - full_sun
            - shade
          description: Sun exposition
        water:
          type: string
          enum:
            - once_week
            - everyday
            - twice_week
          description: Watering preferences
        companions:
          type: array
          description: A list of benefical plants
          items:
            $ref: "#/components/schemas/Plant"
        competitors:
          type: array
          description: A list of detrimental plants
          items:
            $ref: "#/components/schemas/Plant"
        seeding:
          type: object
          description: The approximate period for seeding and the germination duration
          required:
            - start
            - end
            - germination
          properties:
            start:
              type: number
              description: The month to start seeding
              minimum: 1
              maximum: 12
              example: 1
            end:
              type: number
              description: The month to end seeding
              minimum: 1
              maximum: 12
              example: 2
            germination:
              type: number
              description: The approximate duration in days untill germination
              minimum: 1
              maximum: 30
              example: 20
        transplanting:
          type: object
          description: The approximate period for transplanting and the duration
          required:
            - start
            - end
            - duration
          properties:
            start:
              type: number
              description: The month to start transplanting
              maximum: 12
              minimum: 0
              example: 0
            end:
              type: number
              description: The month to end transplanting
              maximum: 12
              example: 0
              minimum: 0
            duration:
              type: number
              description: The approximate duration in days until you can plant
              maximum: 365
              minimum: 0
              example: 0
        planting:
          type: object
          description: The approximate period for planting and the duration until harvest
          required:
            - start
            - end
            - maturity
          properties:
            start:
              type: number
              description: The month to start planting
              minimum: 1
              maximum: 12
              example: 3
            end:
              type: number
              description: |
                The month to end planting
              minimum: 1
              maximum: 12
              example: 4
            maturity:
              type: number
              description: The duration in days until the maturity of the plant
              example: 60
        harvesting:
          type: object
          description: The approximate period to harvest a plant
          required:
            - start
            - end
          properties:
            start:
              type: number
              description: The month to start harvesting
              minimum: 1
              maximum: 12
              example: 6
            end:
              type: number
              description: The month to end harvesting
              example: 8
              minimum: 1
              maximum: 12
        spacing:
          type: number
          description: The distance between plants in centimeters
        rows:
          type: number
          description: The distance bewteen rows in centimeters
        createdAt:
          type: string
          format: date-time
          minimum: "2022-01-01T00:00:00Z"
          maximum: "2122-12-31T23:59:59Z"
        updatedAt:
          type: string
          format: date-time
          minimum: "2022-01-01T00:00:00Z"
          maximum: "2122-12-31T23:59:59Z"
      required:
        - id
        - plant
        - name
        - type
        - harvest
        - season
        - frost
        - sun
        - water
        - seeding
        - transplanting
        - planting
        - harvesting
        - spacing
        - rows
    Culture:
      title: Culture
      x-stoplight:
        id: c8ecolqm8mdl9
      type: object
      description: A culture represent a seed that is in the process of being cultivated.
      properties:
        id:
          type: string
          description: A unique identifier
          format: uuid
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        name:
          type: string
          example: Raised bed cabin
        seed:
          $ref: "#/components/schemas/Seed"
        seeding:
          type: object
          required:
            - status
          properties:
            status:
              type: string
              enum:
                - pending
                - started
                - skipped
                - stopped
              example: started
            location:
              type: string
              enum:
                - indoor
                - outdoor
                - frame
                - greenhouse
              example: greenhouse
            quantity:
              type: number
              maximum: 1000
              minimum: 1
              example: 5
            soil:
              type: string
              enum:
                - neutral
            startedAt:
              type: string
              description: The date the phase was started
              format: date
            skippedAt:
              type: string
              description: The date the phase was skipped
              format: date
            stoppedAt:
              type: string
              description: The date the phase was stopped
              format: date
        transplanting:
          type: object
          required:
            - status
          properties:
            status:
              type: string
              enum:
                - pending
                - started
                - skipped
                - stopped
              example: started
            location:
              type: string
              enum:
                - indoor
                - outdoor
                - frame
                - greenhouse
              example: frame
            quantity:
              type: number
              maximum: 1000
              minimum: 1
              example: 5
            soil:
              type: string
              enum:
                - neutral
            startedAt:
              type: string
              description: The date the phase was started
              format: date
            skippedAt:
              type: string
              description: The date the phase was skipped
              format: date
            stoppedAt:
              type: string
              description: The date the phase was stopped
              format: date
        planting:
          type: object
          required:
            - status
          properties:
            status:
              type: string
              enum:
                - pending
                - started
                - skipped
                - stopped
              example: started
            location:
              type: string
              enum:
                - indoor
                - outdoor
                - frame
                - greenhouse
              example: outdoor
            quantity:
              type: number
              maximum: 1000
              minimum: 1
              example: 5
            soil:
              type: string
              enum:
                - neutral
            startedAt:
              type: string
              description: The date the phase was started
              format: date
            skippedAt:
              type: string
              description: The date the phase was skipped
              format: date
            stoppedAt:
              type: string
              description: The date the phase was stopped
              format: date
        harvesting:
          type: object
          required:
            - status
          properties:
            status:
              type: string
              enum:
                - pending
                - started
                - skipped
                - stopped
              example: started
            quantity:
              type: number
              maximum: 1000
              minimum: 1
              example: 5
              description: Total quantity calculated from the harvests made
            weight:
              type: string
              description: Total weight calculated from the harvests made
            startedAt:
              type: string
              description: The date the phase was started
              format: date
            skippedAt:
              type: string
              description: The date the phase was skipped
              format: date
            stoppedAt:
              type: string
              description: The date the phase was stopped
              format: date
            harvests:
              type: array
              description: A list of harvest made during the phase
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date-time
                  quantity:
                    type: number
                  weight:
                    type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - seed
        - seeding
        - transplanting
        - planting
        - harvesting
        - createdAt
        - updatedAt
    Name:
      title: Name
      x-stoplight:
        id: gtli21kmc1mkp
      type: object
      description: Common localized names used to identify a plant.
      properties:
        lang:
          type: string
          description: The language code (ISO 639-1)
        name:
          type: string
          description: The common name of the plant
      required:
        - lang
        - name
  parameters:
    seedId:
      name: seedId
      in: path
      required: true
      schema:
        type: string
      description: The Seed unique identifier
    plantId:
      name: plantId
      in: path
      required: true
      schema:
        type: string
      description: The Plant unique identifier
    cultureId:
      name: cultureId
      in: path
      required: true
      schema:
        type: string
      description: The Culture unique identifier
    userId:
      name: userId
      in: path
      required: true
      schema:
        type: string
      description: The User unique identifier
    notificationId:
      name: notificationId
      in: path
      required: true
      schema:
        type: string
      description: The Notification unique identifier
    listSkip:
      name: skip
      in: query
      schema:
        type: number
        example: 10
      description: The number of items to skip
    listLimit:
      name: limit
      in: query
      required: false
      schema:
        type: number
        example: 10
      description: The limit of item to return
    orderBy:
      name: orderBy
      in: query
      schema:
        type: string
        example: title
        default: name
      description: The field to order the list
    phaseAction:
      name: action
      in: path
      required: true
      schema:
        type: string
        enum:
          - play
          - skip
          - stop
          - resume
      description: A phase action
    phaseName:
      name: phase
      in: path
      required: true
      schema:
        type: string
        enum:
          - seeding
          - transplanting
          - planting
          - harvesting
      description: A phase name
  requestBodies:
    CreateSeedRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              plants:
                type: string
              description:
                type: string
              "":
                type: string
            required:
              - name
              - plants
      description: ""
    UpdateSeedRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Seed"
    CreatePlantsRequest:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              name:
                type: string
                example: Carrot
              family:
                type: string
                example: Apiacea
              genus:
                type: string
                example: Daucus
              species:
                type: string
                example: carota
              subspecies:
                type: string
              variant:
                type: string
              image:
                type: string
                format: binary
            required:
              - name
              - family
              - genus
              - species
      description: ""
    CreateCultureRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of for the culture
              seed:
                type: string
                format: uuid
                description: The seed ID for the culture
            required:
              - seed
      description: ""
    UpdatePlantRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Plant"
    UpdateCultureRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Culture"
  responses:
    GetSeedResponse:
      description: A seed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Seed"
    ListSeedsResponse:
      description: A list of seed
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Seed"
          examples: {}
    GetCultureResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Culture"
    ListCulturesResponse:
      description: A list of culture
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Culture"
        application/xml:
          schema:
            type: object
            properties: {}
      headers:
        Pagination-Count:
          schema:
            type: number
        Pagination-Page:
          schema:
            type: number
        Pagination-Limit:
          schema:
            type: number
    ListPlantsResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Plant"
          examples: {}
    GetPlantResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Plant"
  securitySchemes:
    "12345":
      name: token
      type: apiKey
      in: header
      description: The token received from the login process
